name: Backend CI/CD

# Run on pushes and pull requests to main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-springboot:
    name: Build & Test Spring Boot
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Build with Maven
        run: |
          cd backend/movieapp
          mvn clean verify

      # Build Docker image
      - name: Build & tag Docker image
        uses: docker/build-push-action@v5
        with:
          context: backend/movieapp
          file: backend/movieapp/Dockerfile
          tags: moviemind-springboot:latest
          push: false

  build-ml:
    name: Build ML Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Install dependencies & test
        run: |
          cd ml
          pip install --upgrade pip
          pip install -r requirements.txt
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download ML artifacts from S3
        run: |
          mkdir -p ml/data/processed
          for f in movies_sentiment.parquet movies_embeddings.parquet user_profiles.parquet ranker.joblib; do
            aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/$f ml/data/processed/
          done

      - name: Build ML Docker image
        uses: docker/build-push-action@v5
        with:
          context: ml
          file: ml/Dockerfile
          tags: moviemind-ml:latest
          push: false